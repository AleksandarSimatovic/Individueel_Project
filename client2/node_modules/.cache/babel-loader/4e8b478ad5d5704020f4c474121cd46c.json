{"ast":null,"code":"import axios from 'axios';\nexport const register = newUser => {\n  return axios.post('users/api/register', {\n    username: newUser.username,\n    password: newUser.password,\n    email: newUser.email\n  }).then(response => {\n    console.log(\"Registered!\");\n  });\n};\nexport const login = user => {\n  return axios.post('users/api/login', {\n    password: user.password,\n    email: user.email\n  }).then(response => {\n    localStorage.setItem('usertoken', response.data);\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/userFunctions.js"],"names":["axios","register","newUser","post","username","password","email","then","response","console","log","login","user","localStorage","setItem","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,OAAO,IAAI;AAC/B,SAAOF,KAAK,CACXG,IADM,CACD,oBADC,EACqB;AACxBC,IAAAA,QAAQ,EAAEF,OAAO,CAACE,QADM;AAExBC,IAAAA,QAAQ,EAAEH,OAAO,CAACG,QAFM;AAGxBC,IAAAA,KAAK,EAAEJ,OAAO,CAACI;AAHS,GADrB,EAMNC,IANM,CAMDC,QAAQ,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GARM,CAAP;AASH,CAVM;AAYP,OAAO,MAAMC,KAAK,GAAGC,IAAI,IAAI;AACzB,SAAOZ,KAAK,CACXG,IADM,CACD,iBADC,EACkB;AACrBE,IAAAA,QAAQ,EAAEO,IAAI,CAACP,QADM;AAErBC,IAAAA,KAAK,EAAEM,IAAI,CAACN;AAFS,GADlB,EAKNC,IALM,CAKDC,QAAQ,IAAI;AACdK,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,QAAQ,CAACO,IAA3C;AACA,WAAOP,QAAQ,CAACO,IAAhB;AACH,GARM,EASNC,KATM,CASAC,GAAG,IAAI;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,GAXM,CAAP;AAYH,CAbM","sourcesContent":["import axios from 'axios'\r\n\r\nexport const register = newUser => {\r\n    return axios\r\n    .post('users/api/register', {\r\n        username: newUser.username,\r\n        password: newUser.password,\r\n        email: newUser.email\r\n    })\r\n    .then(response => {\r\n        console.log(\"Registered!\");\r\n    })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n    .post('users/api/login', {\r\n        password: user.password,\r\n        email: user.email\r\n    })\r\n    .then(response => {\r\n        localStorage.setItem('usertoken', response.data);\r\n        return response.data;\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}