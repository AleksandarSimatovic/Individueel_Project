{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass InformationSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeTemperature = () => {\n      this.setState(initialState => ({\n        isTemperature: !initialState.isTemperature\n      }));\n    };\n\n    this.onChangeDistance = () => {\n      this.setState(initialState => ({\n        isDistance: !initialState.isDistance\n      }));\n    };\n\n    this.onChangeCity = e => {\n      const citySelected = e.target.value;\n      this.setState({\n        city: citySelected\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      ReactDOM.render(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.state.city), document.getElementById('cityName'));\n\n      if (this.state.isTemperature) {\n        ReactDOM.render(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Asked for temperature\"), document.getElementById('temperature'));\n      } else {\n        ReactDOM.render(\"\", document.getElementById('temperature'));\n      }\n\n      if (this.state.isDistance) {\n        ReactDOM.render(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Asked for distance\"), document.getElementById('distance'));\n      } else {\n        ReactDOM.render(\"\", document.getElementById('distance'));\n      }\n\n      ReactDOM.render(React.createElement(FetchCity, {\n        oldState: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), document.getElementById('temperatureInfo'));\n    };\n\n    this.state = {\n      city: \"De Bilt\",\n      isTemperature: false,\n      isDistance: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.onChangeCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"De Bilt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"De Bilt\"), React.createElement(\"option\", {\n      value: \"Manchester\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Manchester\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Temperature\", React.createElement(\"input\", {\n      name: \"Temperature\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangeTemperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Distance\", React.createElement(\"input\", {\n      name: \"Distance\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangeDistance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Get Info\"));\n  }\n\n}\n\nReactDOM.render(React.createElement(InformationSelector, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}), document.getElementById('selectInformationTypes'));\n\nclass FetchCity extends InformationSelector {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      url: \"http://api.geonames.org/searchJSON?name_equals=De Bilt&username=DestinationFinder\",\n      lat: \"\",\n      lng: \"\",\n      city: props.oldState.city\n    };\n    console.log(this.state);\n    console.log(props.oldState);\n  }\n\n  async componentDidMount() {\n    const url = this.state.url;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      lat: data.geonames[0].lat,\n      lng: data.geonames[0].lng\n    });\n    console.log(data.geonames[0]);\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.city) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"cityName\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/index.js"],"names":["React","ReactDOM","InformationSelector","Component","constructor","props","onChangeTemperature","setState","initialState","isTemperature","onChangeDistance","isDistance","onChangeCity","e","citySelected","target","value","city","onSubmit","preventDefault","render","state","document","getElementById","name","FetchCity","loading","url","lat","lng","oldState","console","log","componentDidMount","response","fetch","data","json","geonames"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass InformationSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: \"De Bilt\",\n            isTemperature: false,\n            isDistance: false\n        };\n    }\n    onChangeTemperature = () => {\n        this.setState(initialState => ({\n            isTemperature: !initialState.isTemperature,\n        }));\n    }\n    onChangeDistance = () => {\n        this.setState(initialState => ({\n            isDistance: !initialState.isDistance,\n        }));\n    }\n\n    onChangeCity = (e) => {\n        const citySelected = e.target.value;\n        this.setState({city: citySelected});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        ReactDOM.render(<p>{this.state.city}</p>, document.getElementById('cityName'));\n        if (this.state.isTemperature){\n            ReactDOM.render(<p>Asked for temperature</p>, document.getElementById('temperature'));\n        }\n        else{\n            ReactDOM.render(\"\", document.getElementById('temperature'));\n        }\n        if (this.state.isDistance){\n            ReactDOM.render(<p>Asked for distance</p>, document.getElementById('distance'));\n        }\n        else {\n            ReactDOM.render(\"\", document.getElementById('distance'));\n        }\n        ReactDOM.render(<FetchCity oldState={this.state} />, document.getElementById('temperatureInfo'));\n    }\n    render() {\n        return (\n         <form onSubmit={this.onSubmit}>\n              <select onChange={this.onChangeCity}>\n                <option value=\"De Bilt\">De Bilt</option>\n                <option value=\"Manchester\">Manchester</option>\n              </select>\n              <p>\n                <label>\n                  Temperature\n                  <input\n                    name=\"Temperature\"\n                    type=\"checkbox\"\n                    checked={this.state.name}\n                    onChange={this.onChangeTemperature}/>\n                </label>\n                <label>\n                  Distance\n                  <input\n                    name=\"Distance\"\n                    type=\"checkbox\"\n                    checked={this.state.name}\n                    onChange={this.onChangeDistance}/>\n                </label>\n              </p>\n              <button>\n                Get Info\n              </button>\n          </form>\n        );\n    }\n}\n\nReactDOM.render(<InformationSelector />, document.getElementById('selectInformationTypes'));\n\nclass FetchCity extends InformationSelector{\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            url: \"http://api.geonames.org/searchJSON?name_equals=De Bilt&username=DestinationFinder\",\n            lat: \"\",\n            lng: \"\",\n            city: props.oldState.city\n        };\n    console.log(this.state);\n    console.log(props.oldState);\n    }\n\n    async componentDidMount(){\n        const url = this.state.url;\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({lat: data.geonames[0].lat, lng: data.geonames[0].lng})\n        console.log(data.geonames[0]);\n        console.log(this.state);\n    }\n\n    render(){\n        return <div>\n            {this.state.loading ? <div>{this.state.city}</div> : <div>cityName</div>}\n        </div>;\n    }\n}"]},"metadata":{},"sourceType":"module"}