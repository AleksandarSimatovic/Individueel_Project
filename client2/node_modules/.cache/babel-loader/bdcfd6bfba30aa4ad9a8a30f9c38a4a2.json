{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\SearchByPreferences.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n\nclass PreferenceInput extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onChangeMinDistance = e => {\n      const minDist = e.target.value;\n      this.setState({\n        minDist: minDist\n      });\n    };\n\n    this.onChangeMaxDistance = e => {\n      const maxDist = e.target.value;\n      this.setState({\n        maxDist: maxDist\n      });\n    };\n\n    this.onChangeMinTemperature = e => {\n      const minTemp = e.target.value;\n      this.setState({\n        minTemp: minTemp\n      });\n    };\n\n    this.onChangeMaxTemperature = e => {\n      const maxTemp = e.target.value;\n      this.setState({\n        maxTemp: maxTemp\n      });\n    };\n\n    this.onChangeContinent = e => {\n      const continent = e.target.value;\n      this.setState({\n        continent: continent\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.getCapitals();\n    };\n\n    this.getCapitals = async () => {\n      const response = await axios.get('http://10.10.4.4:3000/cities');\n\n      if (this.state.maxDist === \"\") {\n        this.setState({\n          maxDist: 100000\n        });\n      }\n\n      ;\n\n      if (this.state.maxTemp === \"\") {\n        this.setState({\n          maxTemp: 100\n        });\n      }\n\n      ;\n\n      if (this.state.minTemp === \"\") {\n        this.setState({\n          minTemp: -100\n        });\n      }\n\n      ;\n\n      if (this.state.amountOfCities === \"\") {\n        this.setState({\n          amountOfCities: 100\n        });\n      }\n\n      ;\n      ReactDOM.render(React.createElement(this.showPrefOutput, {\n        msg: response.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), document.getElementById('outputPrefSearch'));\n    };\n\n    this.onChangeSort = e => {\n      this.setState({\n        sortStrat: e.target.value\n      });\n    };\n\n    this.onChangeAmountOfCities = e => {\n      this.setState({\n        amountOfCities: e.target.value\n      });\n    };\n\n    this.showPrefOutput = props => {\n      let x = props.msg;\n      this.sortBy(x);\n      let answer = [];\n      answer[0] = React.createElement(\"thead\", {\n        key: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Country\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Distance (km) \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Temperature Now (C)\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Temperature Min (C)\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Temperature Max (C)\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Rating (1-5)\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Number of ratings\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })));\n      let i = 1;\n      let citiesDisplayed = 0;\n\n      for (i = 1; i < props.msg.length + 1; i++) {\n        if (props.msg[i - 1].distance >= this.state.minDist && props.msg[i - 1].distance <= this.state.maxDist && props.msg[i - 1].temperature >= this.state.minTemp && props.msg[i - 1].temperature <= this.state.maxTemp) {\n          if (this.state.continent !== \"--\") {\n            if (this.state.continent === props.msg[i - 1].continent) {\n              if (citiesDisplayed < this.state.amountOfCities) {\n                answer[i] = React.createElement(\"tbody\", {\n                  key: i,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 136\n                  },\n                  __self: this\n                }, React.createElement(\"tr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 136\n                  },\n                  __self: this\n                }, React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 137\n                  },\n                  __self: this\n                }, props.msg[i - 1].cityName), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 138\n                  },\n                  __self: this\n                }, props.msg[i - 1].countryName), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 139\n                  },\n                  __self: this\n                }, props.msg[i - 1].distance), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 140\n                  },\n                  __self: this\n                }, props.msg[i - 1].temperature), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 141\n                  },\n                  __self: this\n                }, props.msg[i - 1].temperatureMin), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 142\n                  },\n                  __self: this\n                }, props.msg[i - 1].temperatureMax), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 143\n                  },\n                  __self: this\n                }, props.msg[i - 1].currentRating), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 144\n                  },\n                  __self: this\n                }, props.msg[i - 1].cityRating.length), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 145\n                  },\n                  __self: this\n                }, React.createElement(\"button\", {\n                  onClick: this.viewBtn(i - 1),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 145\n                  },\n                  __self: this\n                }, \"view\"))));\n                citiesDisplayed++;\n              }\n            }\n          } else if (citiesDisplayed < this.state.amountOfCities) {\n            answer[i] = React.createElement(\"tbody\", {\n              key: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 153\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }, props.msg[i - 1].cityName), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, props.msg[i - 1].countryName), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, props.msg[i - 1].distance), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, props.msg[i - 1].temperature), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158\n              },\n              __self: this\n            }, props.msg[i - 1].temperatureMin), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }, props.msg[i - 1].temperatureMax), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }, props.msg[i - 1].currentRating), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }, props.msg[i - 1].cityRating.length), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              onClick: this.viewBtn,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, \"view\"))));\n            citiesDisplayed++;\n          }\n        }\n      }\n\n      return answer;\n    };\n\n    this.state = {\n      temperature: \"\",\n      minDist: 0,\n      maxDist: 100000,\n      minTemp: -100,\n      maxTemp: 100,\n      sortStrat: \"distanceLow\",\n      amountOfCities: 1000,\n      continent: \"--\"\n    };\n  }\n\n  sortBy(x) {\n    if (this.state.sortStrat === 'temperatureHigh') {\n      x.sort(function (a, b) {\n        return b.temperatureMax - a.temperatureMax;\n      });\n    } else if (this.state.sortStrat === 'temperatureLow') {\n      x.sort(function (a, b) {\n        return a.temperatureMax - b.temperatureMax;\n      });\n    } else if (this.state.sortStrat === 'distanceLow') {\n      x.sort(function (a, b) {\n        return a.distance - b.distance;\n      });\n    } else if (this.state.sortStrat === 'distanceHigh') {\n      x.sort(function (a, b) {\n        return b.distance - a.distance;\n      });\n    } else if (this.state.sortStrat === \"tempDistCombi\") {\n      x.sort(function (b, a) {\n        return 1 / a.distance * (a.temperatureMax + 5) - 1 / b.distance * (b.temperatureMax + 5);\n      });\n    } else if (this.state.sortStrat === \"ratingHigh\") {\n      x.sort(function (a, b) {\n        return b.currentRating - a.currentRating;\n      });\n    } else if (this.state.sortStrat === \"all\") {\n      x.sort(function (b, a) {\n        return 1 / a.distance * (a.temperatureMax + 5) * a.currentRating - 1 / b.distance * (b.temperatureMax + 5) * b.currentRating;\n      });\n    } else alert(this.state.sortStrat);\n  }\n\n  viewBtn(x) {\n    console.log(x);\n    alert(x);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"formPrefSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Distance\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Min \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeMinDistance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Max \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeMaxDistance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Temperature\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Min \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeMinTemperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Max \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeMaxTemperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Sort by\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"select\", {\n      onChange: this.onChangeSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"distanceLow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Distance Low to High\"), React.createElement(\"option\", {\n      value: \"distanceHigh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Distance High to Low\"), React.createElement(\"option\", {\n      value: \"temperatureHigh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Temperature High to Low\"), React.createElement(\"option\", {\n      value: \"temperatureLow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Temperature Low to High\"), React.createElement(\"option\", {\n      value: \"tempDistCombi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Temperature Distance Combi\"), React.createElement(\"option\", {\n      value: \"ratingHigh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Only rating\"), React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"All\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), \"Max amount of cities\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeAmountOfCities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Continent\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"\\xA0\\xA0\"), React.createElement(\"select\", {\n      onChange: this.onChangeContinent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"--\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Choose continent\"), React.createElement(\"option\", {\n      value: \"EU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Europe\"), React.createElement(\"option\", {\n      value: \"AF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Africa\"), React.createElement(\"option\", {\n      value: \"NA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"North America\"), React.createElement(\"option\", {\n      value: \"SA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"South America\"), React.createElement(\"option\", {\n      value: \"AS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Asia\"), React.createElement(\"option\", {\n      value: \"OC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Australia\")))), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Find cities!\"))), React.createElement(\"div\", {\n      id: \"testDIV\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"outputPrefSearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PreferenceInput;","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/SearchByPreferences.js"],"names":["React","axios","ReactDOM","PreferenceInput","Component","constructor","props","onChangeMinDistance","e","minDist","target","value","setState","onChangeMaxDistance","maxDist","onChangeMinTemperature","minTemp","onChangeMaxTemperature","maxTemp","onChangeContinent","continent","onSubmit","preventDefault","getCapitals","response","get","state","amountOfCities","render","data","document","getElementById","onChangeSort","sortStrat","onChangeAmountOfCities","showPrefOutput","x","msg","sortBy","answer","i","citiesDisplayed","length","distance","temperature","cityName","countryName","temperatureMin","temperatureMax","currentRating","cityRating","viewBtn","sort","a","b","alert","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass PreferenceInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            temperature: \"\",\r\n            minDist: 0,\r\n            maxDist: 100000,\r\n            minTemp: -100,\r\n            maxTemp: 100,\r\n            sortStrat: \"distanceLow\",\r\n            amountOfCities: 1000,\r\n            continent: \"--\"\r\n        };\r\n    }\r\n\r\n    onChangeMinDistance = (e) => {\r\n        const minDist = e.target.value;\r\n        this.setState({minDist: minDist});\r\n    }\r\n\r\n    onChangeMaxDistance = (e) => {\r\n        const maxDist = e.target.value;\r\n        this.setState({maxDist: maxDist});\r\n    }\r\n\r\n    onChangeMinTemperature = (e) => {\r\n        const minTemp = e.target.value;\r\n        this.setState({minTemp: minTemp});\r\n    }\r\n\r\n    onChangeMaxTemperature = (e) => {\r\n        const maxTemp = e.target.value;\r\n        this.setState({maxTemp: maxTemp});\r\n    }\r\n\r\n    onChangeContinent = (e) => {\r\n        const continent = e.target.value;\r\n        this.setState({continent: continent});\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.getCapitals();\r\n    }\r\n\r\n    getCapitals = (async() => {\r\n        const response = await axios.get('http://10.10.4.4:3000/cities');\r\n        if(this.state.maxDist === \"\"){ this.setState({maxDist: 100000})};\r\n        if(this.state.maxTemp === \"\"){ this.setState({maxTemp: 100})};\r\n        if(this.state.minTemp === \"\"){ this.setState({minTemp: -100})};\r\n        if(this.state.amountOfCities === \"\"){ this.setState({amountOfCities: 100})};\r\n        ReactDOM.render(<this.showPrefOutput msg={response.data} />, document.getElementById('outputPrefSearch'));\r\n    })\r\n\r\n    onChangeSort = (e) => {\r\n        this.setState({sortStrat: e.target.value});\r\n    }\r\n\r\n    onChangeAmountOfCities = (e) => {\r\n        this.setState({amountOfCities: e.target.value});\r\n    }\r\n\r\n    sortBy(x){\r\n        if(this.state.sortStrat === 'temperatureHigh'){\r\n            x.sort(function (a, b ) {\r\n                return b.temperatureMax - a.temperatureMax;\r\n            })\r\n        }\r\n        else if (this.state.sortStrat === 'temperatureLow'){\r\n            x.sort(function (a, b ) {\r\n                return a.temperatureMax - b.temperatureMax;\r\n            })\r\n        }\r\n        else if (this.state.sortStrat === 'distanceLow'){\r\n            x.sort(function (a, b ) {\r\n                return a.distance - b.distance;\r\n            })\r\n        }\r\n        else if (this.state.sortStrat === 'distanceHigh'){\r\n            x.sort(function (a, b ) {\r\n                return b.distance - a.distance;\r\n            })\r\n        }\r\n        else if(this.state.sortStrat === \"tempDistCombi\"){\r\n            x.sort(function (b, a ) {\r\n                return ((1/a.distance)*(a.temperatureMax+5)) - ((1/b.distance)*(b.temperatureMax+5));\r\n            })\r\n        }\r\n        else if(this.state.sortStrat === \"ratingHigh\"){\r\n            x.sort(function (a, b ) {\r\n                return b.currentRating - a.currentRating;\r\n            })\r\n        }\r\n        else if(this.state.sortStrat === \"all\"){\r\n            x.sort(function (b, a ) {\r\n                return ((1/a.distance)*(a.temperatureMax+5)*(a.currentRating)) - ((1/b.distance)*(b.temperatureMax+5)*(b.currentRating));\r\n            })\r\n        }\r\n        else alert(this.state.sortStrat);\r\n    }\r\n\r\n    viewBtn(x) {\r\n        console.log(x)\r\n        alert(x)\r\n    }\r\n\r\n    showPrefOutput = (props) => {\r\n        let x = props.msg;\r\n        this.sortBy(x);\r\n        let answer = [];\r\n        answer[0] = <thead key=\"0\"><tr>\r\n                                        <td>City</td>\r\n                                        <td>Country</td>\r\n                                        <td>Distance (km) </td>\r\n                                        <td>Temperature Now (C)</td>\r\n                                        <td>Temperature Min (C)</td>\r\n                                        <td>Temperature Max (C)</td>\r\n                                        <td>Rating (1-5)</td>\r\n                                        <td>Number of ratings</td>\r\n                                        <td></td>\r\n                                    </tr></thead>;\r\n        let i = 1;\r\n        let citiesDisplayed = 0;\r\n        for (i = 1; i<props.msg.length + 1;i++){\r\n            if(props.msg[i-1].distance >= this.state.minDist && props.msg[i-1].distance <= this.state.maxDist\r\n                && props.msg[i-1].temperature >= this.state.minTemp && props.msg[i-1].temperature <= this.state.maxTemp\r\n                ) {\r\n                    if(this.state.continent !== \"--\"){\r\n                        if(this.state.continent === props.msg[i-1].continent){\r\n                            if(citiesDisplayed < this.state.amountOfCities) {\r\n                                answer[i] = <tbody key={i}><tr>\r\n                                                                <td>{props.msg[i-1].cityName}</td>\r\n                                                                <td>{props.msg[i-1].countryName}</td>\r\n                                                                <td>{props.msg[i-1].distance}</td>\r\n                                                                <td>{props.msg[i-1].temperature}</td>\r\n                                                                <td>{props.msg[i-1].temperatureMin}</td>\r\n                                                                <td>{props.msg[i-1].temperatureMax}</td>\r\n                                                                <td>{props.msg[i-1].currentRating}</td>\r\n                                                                <td>{props.msg[i-1].cityRating.length}</td>\r\n                                                                <td><button onClick={this.viewBtn(i-1)}>view</button></td>\r\n                                                            </tr></tbody>\r\n                                citiesDisplayed++;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (citiesDisplayed < this.state.amountOfCities) {\r\n\r\n                        answer[i] = <tbody key={i}><tr>\r\n                                                        <td>{props.msg[i-1].cityName}</td>\r\n                                                        <td>{props.msg[i-1].countryName}</td>\r\n                                                        <td>{props.msg[i-1].distance}</td>\r\n                                                        <td>{props.msg[i-1].temperature}</td>\r\n                                                        <td>{props.msg[i-1].temperatureMin}</td>\r\n                                                        <td>{props.msg[i-1].temperatureMax}</td>\r\n                                                        <td>{props.msg[i-1].currentRating}</td>\r\n                                                        <td>{props.msg[i-1].cityRating.length}</td>\r\n                                                        <td><button onClick={this.viewBtn}>view</button></td>\r\n                                                    </tr></tbody>\r\n                        citiesDisplayed++;\r\n                    }\r\n\r\n            }\r\n        }\r\n        return (\r\n            answer\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"formPrefSearch\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                          <h2>Distance</h2>\r\n                          <p>\r\n                              <label>Min <span>&nbsp;</span>\r\n                                <input type='text' onChange={this.onChangeMinDistance} />\r\n                                  </label>\r\n                                  <span>&nbsp;</span>\r\n                                  <label>Max <span>&nbsp;</span>\r\n                                <input type='text' onChange={this.onChangeMaxDistance} />\r\n                              </label>\r\n                          </p>\r\n                          <h2>Temperature</h2>\r\n                          <p>\r\n                              <label>Min <span>&nbsp;</span>\r\n                                <input type='text' onChange={this.onChangeMinTemperature} />\r\n                              </label>\r\n                              <span>&nbsp;</span>\r\n                              <label>Max <span>&nbsp;</span>\r\n                                <input type='text' onChange={this.onChangeMaxTemperature} />\r\n                              </label>\r\n                          </p>\r\n                           <p>\r\n                              <label>Sort by<span>&nbsp;</span>\r\n                                  <select onChange={this.onChangeSort}>\r\n                                    <option value=\"distanceLow\">Distance Low to High</option>\r\n                                    <option value=\"distanceHigh\">Distance High to Low</option>\r\n                                    <option value=\"temperatureHigh\">Temperature High to Low</option>\r\n                                    <option value=\"temperatureLow\">Temperature Low to High</option>\r\n                                    <option value=\"tempDistCombi\">Temperature Distance Combi</option>\r\n                                    <option value=\"ratingHigh\">Only rating</option>\r\n                                    <option value=\"all\">All</option>\r\n                                  </select>\r\n                              </label>\r\n                              <label><span>&nbsp;&nbsp;</span>Max amount of cities<span>&nbsp;</span>\r\n                                <input type='text' onChange={this.onChangeAmountOfCities} />\r\n                              </label>\r\n                           </p>\r\n                            <p>\r\n                             <label>Continent<span>&nbsp;&nbsp;</span>\r\n                                <select onChange={this.onChangeContinent}>\r\n                                    <option value=\"--\">Choose continent</option>\r\n                                    <option value=\"EU\">Europe</option>\r\n                                    <option value=\"AF\">Africa</option>\r\n                                    <option value=\"NA\">North America</option>\r\n                                    <option value=\"SA\">South America</option>\r\n                                    <option value=\"AS\">Asia</option>\r\n                                    <option value=\"OC\">Australia</option>\r\n                                  </select>\r\n                             </label>\r\n                             </p>\r\n                          <button>\r\n                            Find cities!\r\n                          </button>\r\n\r\n\r\n                      </form>\r\n                </div>\r\n                  <div id=\"testDIV\">\r\n                    <table  id=\"outputPrefSearch\"></table>\r\n                  </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PreferenceInput"]},"metadata":{},"sourceType":"module"}