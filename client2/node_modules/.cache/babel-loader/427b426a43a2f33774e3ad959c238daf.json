{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\SearchByCity.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nconst home = \"De Bilt\";\nvar cityFound = true;\n\nclass InformationSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeTemperature = () => {\n      this.setState(initialState => ({\n        isTemperature: !initialState.isTemperature\n      }));\n    };\n\n    this.onChangeDistance = () => {\n      this.setState(initialState => ({\n        isDistance: !initialState.isDistance\n      }));\n    };\n\n    this.onChangePopulation = () => {\n      this.setState(initialState => ({\n        isPopulation: !initialState.isPopulation\n      }));\n    };\n\n    this.onChangeCity = e => {\n      const citySelected = e.target.value;\n      this.setState({\n        city: citySelected\n      });\n    };\n\n    this.getTemperature = () => {\n      axios.post('http://10.10.4.4:3000/temperature/getTemperature', {\n        cityName: this.state.city\n      }).then(res => {\n        this.setState({\n          temperature: res.data.toFixed(0)\n        }, () => ReactDOM.render(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Temperature: \", this.state.temperature, \" degrees Celcius\"), document.getElementById('temperature')));\n      });\n    };\n\n    this.getDistance = () => {\n      axios.post('http://10.10.4.4:3000/distance/getDistance', {\n        lat1: this.state.homeLat,\n        lat2: this.state.lat,\n        lng1: this.state.homeLng,\n        lng2: this.state.lng\n      }).then(res => {\n        ReactDOM.render(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Distance from \", this.state.currentLocation, \" to \", this.state.city, \":\", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"\\xA0\"), res.data, \" km\"), document.getElementById('distance'));\n      });\n    };\n\n    this.getCityInfoTypes = () => {\n      if (cityFound === true) {\n        ReactDOM.render(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"City: \", this.state.city), document.getElementById('cityName'));\n\n        if (this.state.isTemperature) {\n          this.getTemperature();\n        } else {\n          ReactDOM.render(\"\", document.getElementById('temperature'));\n        }\n\n        if (this.state.isDistance) {\n          this.getDistance();\n        } else {\n          ReactDOM.render(\"\", document.getElementById('distance'));\n        }\n\n        if (this.state.isPopulation) {\n          ReactDOM.render(React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"Population: \", this.state.population), document.getElementById('population'));\n        } else {\n          ReactDOM.render(\"\", document.getElementById('population'));\n        }\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.getCurrentLocation();\n    };\n\n    this.state = {\n      currentLocation: home,\n      homeLat: \"\",\n      homeLng: \"\",\n      city: \"De Bilt\",\n      isTemperature: false,\n      isDistance: false,\n      isContinent: false,\n      lat: \"\",\n      lng: \"\",\n      population: \"\"\n    };\n  }\n\n  getCurrentLocation() {\n    axios.post('http://localhost:3000/location/getCurrentLocation', {\n      cityName: this.state.currentLocation\n    }).then(res => {\n      this.setState({\n        country: \"\",\n        homeLat: res.data.geonames[0].lat,\n        homeLng: res.data.geonames[0].lng\n      }, this.getCityInfo());\n    });\n  }\n\n  getCityInfo() {\n    axios.post('http://localhost:3000/location/getCityInfo', {\n      cityName: this.state.city\n    }).then(res => {\n      if (res.data.geonames.length > 0) {\n        cityFound = true;\n        this.setState({\n          country: res.data.geonames[0].countryName,\n          lat: res.data.geonames[0].lat,\n          lng: res.data.geonames[0].lng,\n          population: res.data.geonames[0].population\n        }, () => {\n          ReactDOM.render(React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"Country: \", this.state.country), document.getElementById('countryName'));\n          this.getCityInfoTypes();\n        });\n      } else {\n        cityFound = false;\n        ReactDOM.render(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"City not found\"), document.getElementById('cityName'));\n        ReactDOM.render(\"\", document.getElementById('countryName'));\n        ReactDOM.render(\"\", document.getElementById('temperature'));\n        ReactDOM.render(\"\", document.getElementById('distance'));\n        ReactDOM.render(\"\", document.getElementById('population'));\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"formCitySearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Choose a city and the information you wish to see\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Temperature\", React.createElement(\"input\", {\n      name: \"Temperature\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangeTemperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Distance\", React.createElement(\"input\", {\n      name: \"Distance\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangeDistance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Population\", React.createElement(\"input\", {\n      name: \"population\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangePopulation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Get Info\")), React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"searchInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SearchByCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"currentCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"selectInformationTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"cityName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"countryName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"latlng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"distance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"temperatureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"population\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default InformationSelector;","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/SearchByCity.js"],"names":["React","ReactDOM","axios","home","cityFound","InformationSelector","Component","constructor","props","onChangeTemperature","setState","initialState","isTemperature","onChangeDistance","isDistance","onChangePopulation","isPopulation","onChangeCity","e","citySelected","target","value","city","getTemperature","post","cityName","state","then","res","temperature","data","toFixed","render","document","getElementById","getDistance","lat1","homeLat","lat2","lat","lng1","homeLng","lng2","lng","currentLocation","getCityInfoTypes","population","onSubmit","preventDefault","getCurrentLocation","isContinent","country","geonames","getCityInfo","length","countryName","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst home = \"De Bilt\";\r\nvar cityFound = true;\r\n\r\nclass InformationSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentLocation: home,\r\n            homeLat: \"\",\r\n            homeLng: \"\",\r\n            city: \"De Bilt\",\r\n            isTemperature: false,\r\n            isDistance: false,\r\n            isContinent: false,\r\n            lat: \"\",\r\n            lng: \"\",\r\n            population: \"\",\r\n        };\r\n    }\r\n    onChangeTemperature = () => {\r\n        this.setState(initialState => ({\r\n            isTemperature: !initialState.isTemperature,\r\n        }));\r\n    }\r\n    onChangeDistance = () => {\r\n        this.setState(initialState => ({\r\n            isDistance: !initialState.isDistance,\r\n        }));\r\n    }\r\n    onChangePopulation = () => {\r\n        this.setState(initialState => ({\r\n            isPopulation: !initialState.isPopulation,\r\n        }));\r\n    }\r\n    onChangeCity = (e) => {\r\n        const citySelected = e.target.value;\r\n        this.setState({city: citySelected});\r\n    }\r\n\r\n    getCurrentLocation() {\r\n        axios.post('http://localhost:3000/location/getCurrentLocation', {\r\n            cityName: this.state.currentLocation\r\n        })\r\n        .then((res) => {\r\n            this.setState({country: \"\",\r\n                homeLat: res.data.geonames[0].lat,\r\n                homeLng: res.data.geonames[0].lng\r\n            }, this.getCityInfo());\r\n        })\r\n    }\r\n\r\n    getCityInfo() {\r\n        axios.post('http://localhost:3000/location/getCityInfo', {\r\n            cityName: this.state.city\r\n        })\r\n        .then((res) => {\r\n            if(res.data.geonames.length>0){\r\n                cityFound = true;\r\n                this.setState({\r\n                    country: res.data.geonames[0].countryName,\r\n                    lat: res.data.geonames[0].lat, lng: res.data.geonames[0].lng,\r\n                    population: res.data.geonames[0].population\r\n                }, () => {\r\n                    ReactDOM.render(<p>Country: {this.state.country}</p>, document.getElementById('countryName'))\r\n                    this.getCityInfoTypes()\r\n                    })\r\n            }\r\n            else {\r\n                cityFound = false;\r\n                ReactDOM.render(<p>City not found</p>, document.getElementById('cityName'));\r\n                ReactDOM.render(\"\", document.getElementById('countryName'));\r\n                ReactDOM.render(\"\", document.getElementById('temperature'));\r\n                ReactDOM.render(\"\", document.getElementById('distance'));\r\n                ReactDOM.render(\"\", document.getElementById('population'));\r\n            }\r\n        })\r\n    }\r\n\r\n    getTemperature = () => {\r\n        axios.post('http://10.10.4.4:3000/temperature/getTemperature', {\r\n            cityName: this.state.city\r\n        })\r\n        .then((res) => {\r\n            this.setState({temperature: res.data.toFixed(0) },\r\n            () => ReactDOM.render(<div>Temperature: {this.state.temperature} degrees Celcius</div>,\r\n            document.getElementById('temperature')));\r\n        })\r\n    }\r\n\r\n    getDistance = () => {\r\n        axios.post('http://10.10.4.4:3000/distance/getDistance', {\r\n            lat1: this.state.homeLat,\r\n            lat2: this.state.lat,\r\n            lng1: this.state.homeLng,\r\n            lng2: this.state.lng\r\n        })\r\n        .then((res) => {\r\n            ReactDOM.render(<p>Distance from {this.state.currentLocation} to {this.state.city}:<span>&nbsp;</span>{res.data} km</p>, document.getElementById('distance'));\r\n        })\r\n    }\r\n\r\n    getCityInfoTypes = () => {\r\n        if(cityFound === true){\r\n            ReactDOM.render(<p>City: {this.state.city}</p>, document.getElementById('cityName'));\r\n\r\n            if (this.state.isTemperature){\r\n                this.getTemperature()\r\n            }\r\n            else{\r\n                ReactDOM.render(\"\", document.getElementById('temperature'));\r\n            }\r\n            if (this.state.isDistance){\r\n                this.getDistance()\r\n            }\r\n            else {\r\n                ReactDOM.render(\"\", document.getElementById('distance'));\r\n            }\r\n            if (this.state.isPopulation){\r\n                ReactDOM.render(<p>Population: {this.state.population}</p>, document.getElementById('population'));\r\n            }\r\n            else {\r\n                ReactDOM.render(\"\", document.getElementById('population'));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.getCurrentLocation();\r\n    }\r\n    render() {\r\n        return (\r\n        <div id=\"formCitySearch\">\r\n         <form onSubmit={this.onSubmit}>\r\n              <h1>Choose a city and the information you wish to see</h1>\r\n              <input type='text' onChange={this.onChangeCity} />\r\n                <p>\r\n                <label>\r\n                  Temperature\r\n                  <input\r\n                    name=\"Temperature\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.name}\r\n                    onChange={this.onChangeTemperature}/>\r\n                </label>\r\n                <label>\r\n                  Distance\r\n                  <input\r\n                    name=\"Distance\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.name}\r\n                    onChange={this.onChangeDistance}/>\r\n                </label>\r\n                 <label>\r\n                  Population\r\n                  <input\r\n                    name=\"population\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.name}\r\n                    onChange={this.onChangePopulation}/>\r\n                </label>\r\n              </p>\r\n              <button>\r\n                Get Info\r\n              </button>\r\n\r\n          </form>\r\n          <div id=\"wrapper\">\r\n              <div id=\"searchInfo\"></div>\r\n              <div id=\"SearchByCity\">\r\n                <div id=\"currentCity\"></div>\r\n                <div id=\"selectInformationTypes\"></div>\r\n                <div id=\"cityName\"></div>\r\n                <div id=\"countryName\"></div>\r\n                <div id=\"latlng\"></div>\r\n                <div id=\"temperature\"></div>\r\n                <div id=\"distance\"></div>\r\n                <div id=\"temperatureInfo\"></div>\r\n                <div id=\"population\"></div>\r\n              </div>\r\n          </div>\r\n       </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default InformationSelector"]},"metadata":{},"sourceType":"module"}