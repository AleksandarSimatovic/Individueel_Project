{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\CapitalInit.js\";\nimport React from 'react';\nimport calculateDistance from './util';\nimport axios from 'axios';\nvar homeLat = 52.11;\nvar homeLng = 5.18;\n\nclass CapitalInit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initDB = () => {\n      const url = \"http://api.geonames.org/countryInfoJSON?formatted=true&username=destinationFinder\";\n      fetch(url).then(res => res.json()).then(data => {\n        let i;\n\n        for (i = 0; i < 10; i++) {\n          if (data.geonames[i].capital.length > 0) {\n            const name = data.geonames[i].capital;\n            const countryName = data.geonames[i].countryName;\n            const spokenLanguages = data.geonames[i].languages;\n            axios.post('http://localhost:3000/location/getSpecificCity', {\n              capitalName: name\n            }).then(res => res.json()).then(res => {\n              let lat = res.data.geonames[0].lat;\n              let lng = res.data.geonames[0].lng;\n              const distance = calculateDistance(homeLat, homeLng, lat, lng);\n              axios.post('http://localhost:3000/weather/getWeather', {\n                capitalName: name\n              }).then(res => {\n                try {\n                  let temp = res.data.main.temp;\n                  let tempCelcius = (temp - 273.15).toFixed(0);\n                  const city = {\n                    \"cityName\": name,\n                    \"countryName\": countryName,\n                    \"spokenLanguages\": spokenLanguages,\n                    \"distance\": distance,\n                    \"temperature\": tempCelcius,\n                    \"cityLat\": lat,\n                    \"cityLng\": lng,\n                    \"currentRating\": 3\n                  };\n                  axios.post('http://10.10.4.4:5000/cities/add', city);\n                } catch (e) {\n                  console.log(e);\n                }\n              });\n            });\n          }\n        }\n\n        console.log(\"DB filled with capitals\");\n      }).catch(console.log);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"DBInitBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.initDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Initialize Database\"));\n  }\n\n}\n\nexport default CapitalInit;","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/CapitalInit.js"],"names":["React","calculateDistance","axios","homeLat","homeLng","CapitalInit","Component","initDB","url","fetch","then","res","json","data","i","geonames","capital","length","name","countryName","spokenLanguages","languages","post","capitalName","lat","lng","distance","temp","main","tempCelcius","toFixed","city","e","console","log","catch","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport calculateDistance from './util'\r\nimport axios from 'axios';\r\n\r\nvar homeLat = 52.11;\r\nvar homeLng = 5.18;\r\n\r\nclass CapitalInit extends React.Component {\r\n    initDB = () => {\r\n        const url = \"http://api.geonames.org/countryInfoJSON?formatted=true&username=destinationFinder\";\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            let i;\r\n            for (i = 0; i< 10;i++){\r\n                if(data.geonames[i].capital.length > 0){\r\n                    const name = data.geonames[i].capital;\r\n                    const countryName = data.geonames[i].countryName;\r\n                    const spokenLanguages = data.geonames[i].languages;\r\n                    axios.post('http://localhost:3000/location/getSpecificCity', {\r\n                        capitalName: name\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        let lat = res.data.geonames[0].lat;\r\n                        let lng = res.data.geonames[0].lng;\r\n                        const distance = calculateDistance(homeLat, homeLng, lat, lng);\r\n\r\n\r\n                        axios.post('http://localhost:3000/weather/getWeather', {\r\n                            capitalName: name\r\n                        })\r\n                        .then((res) => {\r\n                            try{\r\n                                let temp = res.data.main.temp;\r\n                                let tempCelcius = (temp - 273.15).toFixed(0);\r\n                                const city = {\r\n                                    \"cityName\": name,\r\n                                    \"countryName\": countryName,\r\n                                    \"spokenLanguages\": spokenLanguages,\r\n                                    \"distance\": distance,\r\n                                    \"temperature\": tempCelcius,\r\n                                    \"cityLat\": lat,\r\n                                    \"cityLng\": lng,\r\n                                    \"currentRating\": 3,\r\n                                }\r\n                                axios.post('http://10.10.4.4:5000/cities/add', city)\r\n                            }\r\n                            catch(e){\r\n                                console.log(e);\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n            console.log(\"DB filled with capitals\");\r\n        })\r\n        .catch(console.log);\r\n    }\r\n\r\n    render() {\r\n    return(\r\n        <div id=\"DBInitBtn\">\r\n            <button onClick={this.initDB} >Initialize Database</button>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default CapitalInit\r\n"]},"metadata":{},"sourceType":"module"}