{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\CapitalInit.js\";\nimport React from 'react';\nimport calculateDistance from './util';\nimport axios from 'axios';\nvar homeLat = 52.11;\nvar homeLng = 5.18;\n\nclass CapitalInit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.initDB = () => {\n      axios.get('http://10.10.4.4:3000/location/getCountryInfo').then(res => {\n        console.log(res.data.geonames);\n        let i;\n\n        for (i = 0; i < 10; i++) {\n          if (res.data.geonames[i].capital.length > 0) {\n            const name = res.data.geonames[i].capital;\n            const countryName = res.data.geonames[i].countryName;\n            const spokenLanguages = res.data.geonames[i].languages;\n            const continent = res.data.geonames[i].continent;\n            axios.post('http://10.10.4.4:3000/location/getSpecificCity', {\n              capitalName: name\n            }).then(res => {\n              let lat = res.data.geonames[0].lat;\n              let lng = res.data.geonames[0].lng;\n              const distance = calculateDistance(homeLat, homeLng, lat, lng);\n              axios.post('http://10.10.4.4:3000/weather/getWeather', {\n                capitalName: name\n              }).then(res => {\n                try {\n                  let temp = res.data.main.temp;\n                  let tempMax = (res.data.main.temp_max - 273.15).toFixed(0);\n                  let tempMin = (res.data.main.temp_min - 273.15).toFixed(0);\n                  let tempCelcius = (temp - 273.15).toFixed(0);\n                  const city = {\n                    \"cityName\": name,\n                    \"countryName\": countryName,\n                    \"spokenLanguages\": spokenLanguages,\n                    \"distance\": distance,\n                    \"temperature\": tempCelcius,\n                    \"temperatureMax\": tempMax,\n                    \"temperatureMin\": tempMin,\n                    \"cityLat\": lat,\n                    \"cityLng\": lng,\n                    \"currentRating\": 3,\n                    \"continent\": continent\n                  };\n                  axios.post('http://10.10.4.4:5000/cities/add', city);\n                } catch (e) {\n                  console.log(e);\n                }\n              });\n            });\n          }\n        }\n\n        console.log(\"DB filled with capitals\");\n      }).catch(console.log);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"DBInitBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.initDB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Initialize Database\"));\n  }\n\n}\n\nexport default CapitalInit;","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/CapitalInit.js"],"names":["React","calculateDistance","axios","homeLat","homeLng","CapitalInit","Component","initDB","get","then","res","console","log","data","geonames","i","capital","length","name","countryName","spokenLanguages","languages","continent","post","capitalName","lat","lng","distance","temp","main","tempMax","temp_max","toFixed","tempMin","temp_min","tempCelcius","city","e","catch","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport calculateDistance from './util'\r\nimport axios from 'axios';\r\n\r\nvar homeLat = 52.11;\r\nvar homeLng = 5.18;\r\n\r\nclass CapitalInit extends React.Component {\r\n    initDB = () => {\r\n        axios.get('http://10.10.4.4:3000/location/getCountryInfo')\r\n        .then(res => {\r\n            console.log(res.data.geonames)\r\n            let i;\r\n            for (i = 0; i< 10;i++){\r\n                if(res.data.geonames[i].capital.length > 0){\r\n                    const name = res.data.geonames[i].capital;\r\n                    const countryName = res.data.geonames[i].countryName;\r\n                    const spokenLanguages = res.data.geonames[i].languages;\r\n                    const continent = res.data.geonames[i].continent;\r\n                    axios.post('http://10.10.4.4:3000/location/getSpecificCity', {\r\n                        capitalName: name\r\n                    })\r\n                    .then(res => {\r\n                        let lat = res.data.geonames[0].lat;\r\n                        let lng = res.data.geonames[0].lng;\r\n                        const distance = calculateDistance(homeLat, homeLng, lat, lng);\r\n\r\n                        axios.post('http://10.10.4.4:3000/weather/getWeather', {\r\n                            capitalName: name\r\n                        })\r\n                        .then((res) => {\r\n                            try{\r\n                                let temp = res.data.main.temp;\r\n                                let tempMax = (res.data.main.temp_max - 273.15).toFixed(0);\r\n                                let tempMin = (res.data.main.temp_min - 273.15).toFixed(0);\r\n                                let tempCelcius = (temp - 273.15).toFixed(0);\r\n                                const city = {\r\n                                    \"cityName\": name,\r\n                                    \"countryName\": countryName,\r\n                                    \"spokenLanguages\": spokenLanguages,\r\n                                    \"distance\": distance,\r\n                                    \"temperature\": tempCelcius,\r\n                                    \"temperatureMax\": tempMax,\r\n                                    \"temperatureMin\": tempMin,\r\n                                    \"cityLat\": lat,\r\n                                    \"cityLng\": lng,\r\n                                    \"currentRating\": 3,\r\n                                    \"continent\": continent,\r\n                                }\r\n                                axios.post('http://10.10.4.4:5000/cities/add', city)\r\n                            }\r\n                            catch(e){\r\n                                console.log(e);\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n            console.log(\"DB filled with capitals\");\r\n        })\r\n        .catch(console.log);\r\n    }\r\n\r\n    render() {\r\n    return(\r\n        <div id=\"DBInitBtn\">\r\n            <button onClick={this.initDB} >Initialize Database</button>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default CapitalInit\r\n"]},"metadata":{},"sourceType":"module"}