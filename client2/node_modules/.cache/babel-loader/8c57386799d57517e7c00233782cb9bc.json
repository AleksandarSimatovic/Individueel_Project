{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\withAuth.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      const token = localStorage.usertoken;\n      const decoded = jwt_decode(token);\n\n      if (decoded.type === \"admin\") {\n        this.setState({\n          loading: false\n        });\n      } else {}\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/withAuth.js"],"names":["React","Component","Redirect","jwt_decode","withAuth","ComponentToProtect","constructor","state","loading","redirect","componentDidMount","token","localStorage","usertoken","decoded","type","setState","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACjD,SAAO,cAAcJ,SAAd,CAAwB;AAC3BK,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAAb;AAID;;AAEDC,IAAAA,iBAAiB,GAAG;AAChB,YAAMC,KAAK,GAAGC,YAAY,CAACC,SAA3B;AACA,YAAMC,OAAO,GAAGX,UAAU,CAACQ,KAAD,CAA1B;;AAEF,UAAIG,OAAO,CAACC,IAAR,KAAiB,OAArB,EAA8B;AAC5B,aAAKC,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAFD,MAEO,CAEN;AAEF;;AAEDS,IAAAA,MAAM,GAAG;AAAA,0BACuB,KAAKV,KAD5B;AAAA,YACCC,OADD,eACCA,OADD;AAAA,YACUC,QADV,eACUA,QADV;;AAEP,UAAID,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZ,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO,oBAAC,kBAAD,oBAAwB,KAAKS,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AA9B0B,GAA/B;AAgCH","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport default function withAuth(ComponentToProtect) {\r\n    return class extends Component {\r\n        constructor() {\r\n          super();\r\n          this.state = {\r\n            loading: true,\r\n            redirect: false,\r\n          };\r\n        }\r\n\r\n        componentDidMount() {\r\n            const token = localStorage.usertoken;\r\n            const decoded = jwt_decode(token);\r\n\r\n          if (decoded.type === \"admin\") {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            \r\n          }\r\n\r\n        }\r\n\r\n        render() {\r\n          const { loading, redirect } = this.state;\r\n          if (loading) {\r\n            return null;\r\n          }\r\n          if (redirect) {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n          return <ComponentToProtect {...this.props} />;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}