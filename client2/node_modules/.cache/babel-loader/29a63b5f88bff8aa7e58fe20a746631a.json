{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Navbar from './components/navbar.component';\nimport './index.css';\nimport textLogo from './images/DFTextTransparant.png';\nimport calculateDistance from './util';\nimport CapitalInit from './CapitalInit';\nimport InformationSelector from './SearchByCity';\nReactDOM.render(React.createElement(Navbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), document.getElementById('navbar'));\nReactDOM.render(React.createElement(\"img\", {\n  src: textLogo,\n  alt: \"nameLogo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), document.getElementById('nameLogo')); //ReactDOM.render(<InformationSelector />, document.getElementById('selectInformationTypes'));\n//ReactDOM.render(<CapitalInit />, document.getElementById('fillDBWithCapitals'));\n\nclass ShowCapitals extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.SortCapitalsDistance = props => {\n      props.msg.sort(function (a, b) {\n        return a.distance - b.distance;\n      });\n      let answer = [];\n      answer[0] = \"City, Distance\";\n      let i;\n\n      for (i = 1; i < props.msg.length; i++) {\n        answer[i] = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \" \", props.msg[i].cityName, \", \", props.msg[i].distance, \"  \");\n      }\n\n      return answer;\n    };\n\n    this.PrintCapitalsDistance = props => {\n      let answer = [];\n      answer[0] = \"City, Distance\";\n      let i;\n\n      for (i = 1; i < 5; i++) {\n        answer[i] = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" \", props.msg[i].cityName, \", \", props.msg[i].distance, \"  \");\n      }\n\n      return answer;\n    };\n\n    this.showCapitals = async () => {\n      const response = await axios.get('http://localhost:5000/cities');\n      console.log(response.data); //ReactDOM.render(<this.PrintCapitalsDistance msg={response.data} />, document.getElementById('showDBInfo'));\n\n      ReactDOM.render(React.createElement(this.SortCapitalsDistance, {\n        msg: response.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), document.getElementById('showDBInfoSorted'));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showCapitals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Show Capitals\"));\n  }\n\n}\n\nReactDOM.render(React.createElement(ShowCapitals, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}), document.getElementById('showDB'));","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/index.js"],"names":["React","ReactDOM","axios","Navbar","textLogo","calculateDistance","CapitalInit","InformationSelector","render","document","getElementById","ShowCapitals","Component","SortCapitalsDistance","props","msg","sort","a","b","distance","answer","i","length","cityName","PrintCapitalsDistance","showCapitals","response","get","console","log","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport Navbar from './components/navbar.component'\nimport './index.css'\nimport textLogo from './images/DFTextTransparant.png'\nimport calculateDistance from './util'\nimport CapitalInit from './CapitalInit'\nimport InformationSelector from './SearchByCity'\n\n\n\nReactDOM.render(< Navbar />, document.getElementById('navbar'));\nReactDOM.render(<img src={textLogo} alt=\"nameLogo\" />, document.getElementById('nameLogo'));\n\n\n//ReactDOM.render(<InformationSelector />, document.getElementById('selectInformationTypes'));\n\n\n//ReactDOM.render(<CapitalInit />, document.getElementById('fillDBWithCapitals'));\n\nclass ShowCapitals extends React.Component {\n\n    SortCapitalsDistance = (props) => {\n        props.msg.sort(function (a, b) {\n            return a.distance - b.distance;\n        })\n\n        let answer = [];\n        answer[0] = \"City, Distance\";\n        let i;\n        for (i = 1; i<props.msg.length;i++){\n            answer[i] = <p> {props.msg[i].cityName}, {props.msg[i].distance}  </p>\n        }\n\n        return (\n            answer\n        )\n    }\n\n    PrintCapitalsDistance = (props) => {\n        let answer = [];\n        answer[0] = \"City, Distance\";\n        let i;\n        for (i = 1; i<5;i++){\n            answer[i] = <p> {props.msg[i].cityName}, {props.msg[i].distance}  </p>\n        }\n\n        return (\n            answer\n        )\n    }\n\n    showCapitals = (async () => {\n        const response = await axios.get('http://localhost:5000/cities')\n        console.log(response.data)\n        //ReactDOM.render(<this.PrintCapitalsDistance msg={response.data} />, document.getElementById('showDBInfo'));\n\n        ReactDOM.render(<this.SortCapitalsDistance msg={response.data} />, document.getElementById('showDBInfoSorted'));\n    })\n\n    render() {\n        return(\n            <div>\n                <button onClick={this.showCapitals} >Show Capitals</button>\n            </div>\n        )\n    }\n}\nReactDOM.render(<ShowCapitals />, document.getElementById('showDB'));\n\n"]},"metadata":{},"sourceType":"module"}