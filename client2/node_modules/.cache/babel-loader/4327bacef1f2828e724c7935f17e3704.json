{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\FetchCity.js\";\n\nclass FetchCity extends InformationSelector {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      url: \"http://api.geonames.org/searchJSON?name_equals=\" + props.oldState.city + \"&username=DestinationFinder\",\n      lat: \"\",\n      lng: \"\"\n    }; //    console.log(this.state);\n    //    console.log(props.oldState);\n  }\n\n  async componentDidMount() {\n    const url = this.state.url;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      lat: data.geonames[1].lat,\n      lng: data.geonames[1].lng,\n      country: data.geonames[1].countryName\n    }); //        console.log(data.geonames[0]);\n    //        console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.city, \"country: \", this.state.country, \", lat: \", this.state.lat, \", lng: \", this.state.lng));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/FetchCity.js"],"names":["FetchCity","InformationSelector","constructor","props","state","loading","url","oldState","city","lat","lng","componentDidMount","response","fetch","data","json","setState","geonames","country","countryName","render"],"mappings":";;AAAA,MAAMA,SAAN,SAAwBC,mBAAxB,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,GAAG,EAAE,oDAAoDH,KAAK,CAACI,QAAN,CAAeC,IAAnE,GAA0E,6BAFtE;AAGTC,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,GAAG,EAAE;AAJI,KAAb,CAFe,CAQvB;AACA;AACK;;AAED,QAAMC,iBAAN,GAAyB;AACrB,UAAML,GAAG,GAAG,KAAKF,KAAL,CAAWE,GAAvB;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,CAA5B;AACA,UAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACP,MAAAA,GAAG,EAAEK,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBR,GAAvB;AAA4BC,MAAAA,GAAG,EAAEI,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBP,GAAlD;AAAuDQ,MAAAA,OAAO,EAAEJ,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBE;AAAjF,KAAd,EAJqB,CAK7B;AACA;AACK;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKhB,KAAL,CAAWI,IAAjB,eACa,KAAKJ,KAAL,CAAWc,OADxB,aAES,KAAKd,KAAL,CAAWK,GAFpB,aAGS,KAAKL,KAAL,CAAWM,GAHpB,CADE,CAAP;AAQH;;AA/BsC","sourcesContent":["class FetchCity extends InformationSelector{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            url: \"http://api.geonames.org/searchJSON?name_equals=\" + props.oldState.city + \"&username=DestinationFinder\",\r\n            lat: \"\",\r\n            lng: \"\",\r\n        };\r\n//    console.log(this.state);\r\n//    console.log(props.oldState);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const url = this.state.url;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({lat: data.geonames[1].lat, lng: data.geonames[1].lng, country: data.geonames[1].countryName})\r\n//        console.log(data.geonames[0]);\r\n//        console.log(this.state);\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            {<div>{this.state.city}\r\n                country: {this.state.country},\r\n                lat: {this.state.lat},\r\n                lng: {this.state.lng}\r\n            </div>}\r\n\r\n        </div>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}