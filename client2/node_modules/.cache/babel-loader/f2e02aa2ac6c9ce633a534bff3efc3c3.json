{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asimatovic\\\\GitProjecten\\\\destinationFinder\\\\client\\\\src\\\\SearchByCity.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport calculateDistance from './util';\nconst home = \"De Bilt\";\nvar counter = 0;\n\nclass InformationSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeTemperature = () => {\n      this.setState(initialState => ({\n        isTemperature: !initialState.isTemperature\n      }));\n    };\n\n    this.onChangeDistance = () => {\n      this.setState(initialState => ({\n        isDistance: !initialState.isDistance\n      }));\n    };\n\n    this.onChangeCity = e => {\n      const citySelected = e.target.value;\n      this.setState({\n        city: citySelected\n      });\n    };\n\n    this.getTemperature = () => {\n      //        console.log(\"lat and lng in function: \" + this.state.lat + \" + \" + this.state.lng);\n      const url = \"http://api.openweathermap.org/data/2.5/weather?q=\" + this.state.city + \"&APPID=840e44ccd3376f040093e83e5be8f34f\"; //        console.log(url);\n\n      fetch(url).then(res => res.json()).then(data => {\n        //            console.log(\"data: \");\n        //            console.log(data);\n        //            console.log(data.main.temp);\n        const temp = Number(data.main.temp) - 273.15;\n        this.setState({\n          temperature: temp.toFixed(0)\n        });\n      }).catch(console.log);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Temperature: \", this.state.temperature, \" degrees Celcius\");\n    };\n\n    this.componentDidMountInfoTypes = () => {\n      if (this.state.isTemperature) {\n        //            console.log(\"lat and lng: \" + this.state.lat + this.state.lng);\n        ReactDOM.render(React.createElement(this.getTemperature, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), document.getElementById('temperature'));\n      } else {\n        ReactDOM.render(\"\", document.getElementById('temperature'));\n      }\n\n      if (this.state.isDistance) {\n        ReactDOM.render(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Distance from \", this.state.currentLocation, \" to \", this.state.city, \":\", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"\\xA0\"), calculateDistance(this.state.homeLat, this.state.homeLng, this.state.lat, this.state.lng), \" km\"), document.getElementById('distance'));\n      } else {\n        ReactDOM.render(\"\", document.getElementById('distance'));\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var username = \"destinationFinder\";\n      this.setState({\n        userName: username\n      });\n      var url = \"http://api.geonames.org/searchJSON?name_equals=\" + this.state.currentLocation + \"&username=\" + username;\n      console.log(url);\n      this.componentDidMountCurrentLocation(url);\n      url = \"http://api.geonames.org/searchJSON?name_equals=\" + this.state.city + \"&username=\" + username;\n      console.log(url);\n      this.componentDidMountCity(url); //        console.log(\"lat: \" + this.state.lat);\n      //        console.log(\"homelat: \" + this.state.homeLat);\n\n      this.componentDidMountInfoTypes();\n      ReactDOM.render(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"City: \", this.state.city), document.getElementById('cityName'));\n      console.log(this.state);\n\n      if (counter == 0) {\n        counter++;\n        this.onSubmit(e);\n      }\n    };\n\n    this.state = {\n      currentLocation: home,\n      homeLat: \"\",\n      homeLng: \"\",\n      city: \"De Bilt\",\n      isTemperature: false,\n      isDistance: false,\n      lat: \"\",\n      lng: \"\"\n    };\n  }\n\n  componentDidMountCurrentLocation(url) {\n    fetch(url).then(res => res.json()).then(cityData => this.setState({\n      country: \"\",\n      homeLat: cityData.geonames[0].lat,\n      homeLng: cityData.geonames[0].lng\n    }));\n  }\n\n  componentDidMountCity(url) {\n    fetch(url).then(res => res.json()).then(cityData => this.setState({\n      country: cityData.geonames[0].countryName,\n      lat: cityData.geonames[0].lat,\n      lng: cityData.geonames[0].lng\n    }, () => ReactDOM.render(React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Country: \", this.state.country), document.getElementById('countryName'))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"formCitySearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Choose a city and the information you wish to see\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.onChangeCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Temperature\", React.createElement(\"input\", {\n      name: \"Temperature\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangeTemperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Distance\", React.createElement(\"input\", {\n      name: \"Distance\",\n      type: \"checkbox\",\n      checked: this.state.name,\n      onChange: this.onChangeDistance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Get Info\")), React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"searchInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"SearchByCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"currentCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"selectInformationTypes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"cityName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"countryName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"latlng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"distance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"temperatureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default InformationSelector;","map":{"version":3,"sources":["C:/Users/asimatovic/GitProjecten/destinationFinder/client/src/SearchByCity.js"],"names":["React","ReactDOM","calculateDistance","home","counter","InformationSelector","Component","constructor","props","onChangeTemperature","setState","initialState","isTemperature","onChangeDistance","isDistance","onChangeCity","e","citySelected","target","value","city","getTemperature","url","state","fetch","then","res","json","data","temp","Number","main","temperature","toFixed","catch","console","log","componentDidMountInfoTypes","render","document","getElementById","currentLocation","homeLat","homeLng","lat","lng","onSubmit","preventDefault","username","userName","componentDidMountCurrentLocation","componentDidMountCity","cityData","country","geonames","countryName","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport calculateDistance from './util'\r\n\r\n\r\nconst home = \"De Bilt\";\r\nvar counter = 0;\r\n\r\nclass InformationSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentLocation: home,\r\n            homeLat: \"\",\r\n            homeLng: \"\",\r\n            city: \"De Bilt\",\r\n            isTemperature: false,\r\n            isDistance: false,\r\n            lat: \"\",\r\n            lng: \"\"\r\n        };\r\n    }\r\n    onChangeTemperature = () => {\r\n        this.setState(initialState => ({\r\n            isTemperature: !initialState.isTemperature,\r\n        }));\r\n    }\r\n    onChangeDistance = () => {\r\n        this.setState(initialState => ({\r\n            isDistance: !initialState.isDistance,\r\n        }));\r\n    }\r\n    onChangeCity = (e) => {\r\n        const citySelected = e.target.value;\r\n        this.setState({city: citySelected});\r\n    }\r\n\r\n    componentDidMountCurrentLocation(url) {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(cityData => this.setState({country: \"\",\r\n            homeLat: cityData.geonames[0].lat, homeLng: cityData.geonames[0].lng},\r\n        ));\r\n    }\r\n    componentDidMountCity(url) {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(cityData => this.setState({country: cityData.geonames[0].countryName,\r\n            lat: cityData.geonames[0].lat, lng: cityData.geonames[0].lng}, () =>\r\n            ReactDOM.render(<p>Country: {this.state.country}</p>, document.getElementById('countryName')),\r\n        ));\r\n    }\r\n\r\n    getTemperature = () => {\r\n//        console.log(\"lat and lng in function: \" + this.state.lat + \" + \" + this.state.lng);\r\n        const url = \"http://api.openweathermap.org/data/2.5/weather?q=\" + this.state.city + \"&APPID=840e44ccd3376f040093e83e5be8f34f\";\r\n//        console.log(url);\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n//            console.log(\"data: \");\r\n//            console.log(data);\r\n//            console.log(data.main.temp);\r\n            const temp = Number(data.main.temp) - 273.15;\r\n            this.setState({temperature: temp.toFixed(0) });\r\n        })\r\n        .catch(console.log);\r\n\r\n        return <div>Temperature: {this.state.temperature} degrees Celcius</div>;\r\n    }\r\n\r\n    componentDidMountInfoTypes = () => {\r\n        if (this.state.isTemperature){\r\n//            console.log(\"lat and lng: \" + this.state.lat + this.state.lng);\r\n            ReactDOM.render(< this.getTemperature />, document.getElementById('temperature'));\r\n        }\r\n        else{\r\n            ReactDOM.render(\"\", document.getElementById('temperature'));\r\n        }\r\n        if (this.state.isDistance){\r\n            ReactDOM.render(<p>Distance from {this.state.currentLocation} to {this.state.city}:<span>&nbsp;</span>\r\n             {calculateDistance(this.state.homeLat, this.state.homeLng,\r\n                                    this.state.lat, this.state.lng)} km</p>, document.getElementById('distance'));\r\n        }\r\n        else {\r\n            ReactDOM.render(\"\", document.getElementById('distance'));\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        var username = \"destinationFinder\"\r\n        this.setState({userName: username});\r\n        var url = \"http://api.geonames.org/searchJSON?name_equals=\" + this.state.currentLocation + \"&username=\" + username;\r\n        console.log(url);\r\n        this.componentDidMountCurrentLocation(url);\r\n        url = \"http://api.geonames.org/searchJSON?name_equals=\" + this.state.city + \"&username=\" + username;\r\n        console.log(url);\r\n        this.componentDidMountCity(url);\r\n\r\n//        console.log(\"lat: \" + this.state.lat);\r\n//        console.log(\"homelat: \" + this.state.homeLat);\r\n        this.componentDidMountInfoTypes();\r\n\r\n        ReactDOM.render(<p>City: {this.state.city}</p>, document.getElementById('cityName'));\r\n        console.log(this.state);\r\n        if(counter == 0) {counter++; this.onSubmit(e);}\r\n    }\r\n    render() {\r\n        return (\r\n        <div id=\"formCitySearch\">\r\n         <form onSubmit={this.onSubmit}>\r\n              <h1>Choose a city and the information you wish to see</h1>\r\n              <input type='text' onChange={this.onChangeCity} />\r\n                <p>\r\n                <label>\r\n                  Temperature\r\n                  <input\r\n                    name=\"Temperature\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.name}\r\n                    onChange={this.onChangeTemperature}/>\r\n                </label>\r\n                <label>\r\n                  Distance\r\n                  <input\r\n                    name=\"Distance\"\r\n                    type=\"checkbox\"\r\n                    checked={this.state.name}\r\n                    onChange={this.onChangeDistance}/>\r\n                </label>\r\n              </p>\r\n              <button>\r\n                Get Info\r\n              </button>\r\n\r\n          </form>\r\n          <div id=\"wrapper\">\r\n              <div id=\"searchInfo\"></div>\r\n              <div id=\"SearchByCity\">\r\n                <div id=\"currentCity\"></div>\r\n                <div id=\"selectInformationTypes\"></div>\r\n                <div id=\"cityName\"></div>\r\n                <div id=\"countryName\"></div>\r\n                <div id=\"latlng\"></div>\r\n                <div id=\"temperature\"></div>\r\n                <div id=\"distance\"></div>\r\n                <div id=\"temperatureInfo\"></div>\r\n              </div>\r\n          </div>\r\n       </div>\r\n\r\n       );\r\n    }\r\n}\r\n\r\nexport default InformationSelector"]},"metadata":{},"sourceType":"module"}